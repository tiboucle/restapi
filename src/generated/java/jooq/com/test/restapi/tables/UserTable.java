/*
 * This file is generated by jOOQ.
*/
package com.test.restapi.tables;


import com.test.restapi.Keys;
import com.test.restapi.Restapitest;

import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserTable extends TableImpl<Record> {

    private static final long serialVersionUID = 1404927864;

    /**
     * The reference instance of <code>restapitest.user</code>
     */
    public static final UserTable T_USER = new UserTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>restapitest.user.id</code>.
     */
    public final TableField<Record, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>restapitest.user.first_name</code>.
     */
    public final TableField<Record, String> FIRST_NAME = createField("first_name", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>restapitest.user.last_name</code>.
     */
    public final TableField<Record, String> LAST_NAME = createField("last_name", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>restapitest.user.date_of_birth</code>.
     */
    public final TableField<Record, Date> DATE_OF_BIRTH = createField("date_of_birth", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>restapitest.user.street_address</code>.
     */
    public final TableField<Record, String> STREET_ADDRESS = createField("street_address", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>restapitest.user.city</code>.
     */
    public final TableField<Record, String> CITY = createField("city", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>restapitest.user.province</code>.
     */
    public final TableField<Record, String> PROVINCE = createField("province", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>restapitest.user.telephone</code>.
     */
    public final TableField<Record, String> TELEPHONE = createField("telephone", org.jooq.impl.SQLDataType.VARCHAR.length(12).nullable(false), this, "");

    /**
     * The column <code>restapitest.user.email</code>.
     */
    public final TableField<Record, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>restapitest.user.created_at</code>.
     */
    public final TableField<Record, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>restapitest.user.modified_at</code>.
     */
    public final TableField<Record, Timestamp> MODIFIED_AT = createField("modified_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>restapitest.user</code> table reference
     */
    public UserTable() {
        this("user", null);
    }

    /**
     * Create an aliased <code>restapitest.user</code> table reference
     */
    public UserTable(String alias) {
        this(alias, T_USER);
    }

    private UserTable(String alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private UserTable(String alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Restapitest.RESTAPITEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<Record, Integer> getIdentity() {
        return Keys.IDENTITY_T_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Record> getPrimaryKey() {
        return Keys.KEY_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Record>> getKeys() {
        return Arrays.<UniqueKey<Record>>asList(Keys.KEY_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserTable as(String alias) {
        return new UserTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserTable rename(String name) {
        return new UserTable(name, null);
    }
}
